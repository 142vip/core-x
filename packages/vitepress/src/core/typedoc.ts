import type { TypeDocOptions } from 'typedoc'

/**
 * Describes the options declared by the plugin.
 * - https://typedoc-plugin-markdown.org/plugins/vitepress/options
 */
export interface VitepressPluginOptions {
  /**
   * The path to the VitePress project root.
   */
  docsRoot?: string
  /**
   * Configures the autogenerated VitePress sidebar.
   */
  sidebar?: VitepressSidebar
}
export interface VitepressSidebar {
  autoConfiguration: boolean
  format: string
  pretty: boolean
  collapsed: boolean
}

/**
 * 获取默认的typedoc配置
 */
export function getVipTypedocDefaultConfig(): TypeDocOptions {
  return {
    exclude: [
      '**/*.test.ts',
      '**/node_modules/**',
    ],
    cleanOutputDir: true,
    excludeNotDocumented: false,
    excludeExternals: false,
    hideGenerator: true,
    categorizeByGroup: false,
    // projectDocuments: ['CHANGELOG.md', 'README.md'],
    packageOptions: {
      includeVersion: true,
      // projectDocuments: ['CHANGELOG.md', 'README.md'],
      entryPoints: ['src/index.ts'],
      readme: 'none', // 不生成 README 页面
    },
    readme: 'none', // 不生成 README 页面
    lang: 'zh',
    navigation: {
      includeFolders: true,
      includeCategories: false,
      includeGroups: false,
      compactFolders: true,
      excludeReferences: false,
    },
    sluggerConfiguration: {
      lowercase: true,
    },
    headings: {
      readme: true,
      document: true,
    },
    locales: {
      zh: {
        theme_packages: '模块包',
      },
    },
  }
}

/**
 * 定义typedoc配置
 * @param userConfig 用户自定义配置
 */
export function defineVipTypedocConfig<T>(userConfig: T): TypeDocOptions & T {
  const defaultConfig = getVipTypedocDefaultConfig()
  return {
    ...defaultConfig,
    ...userConfig,
  }
}
